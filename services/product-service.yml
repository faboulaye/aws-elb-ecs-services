AWSTemplateFormatVersion: "2010-09-09"
Description: Container on ecs cluster

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Default: backend
    Type: String

  TaskFamily:
    Description: Task family
    Default: api
    Type: String

  ServiceName:
    Description: Service name
    Default: product
    Type: String

  ImageTag:
    Description: Docker image tag
    Default: latest
    Type: String

  Stage:
    Description: A stage name that will be prefixed to resource names
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - test
      - hprod

Resources:
  Task:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref TaskFamily
      Cpu: 512
      Memory: 1024
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !ImportValue ecs-task-execution-role-arn
      ContainerDefinitions:
        - Name: !Sub ${Stage}-${EnvironmentName}-${TaskFamily}-${ServiceName}
          Image: !Sub docker.io/faboulaye/product-api:${ImageTag}
          Cpu: 256
          Memory: 512
          Environment:
            - Name: MONGO_DB_HOST
              Value: !Sub ${Stage}-${EnvironmentName}-${TaskFamily}-mongo-db
          PortMappings:
            - ContainerPort: 8080
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub /ecs/${TaskFamily}/${EnvironmentName}
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: !Ref ServiceName
        - Name: !Sub ${Stage}-${EnvironmentName}-${TaskFamily}-mongo-db
          Image: docker.io/mongo
          Cpu: 256
          Memory: 512
          PortMappings:
            - ContainerPort: 27017
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub /ecs/${TaskFamily}/${EnvironmentName}
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: mongo-db

  Service:
    Type: AWS::ECS::Service
    DependsOn: ListenerRule
    Properties:
      ServiceName: !Sub ${Stage}-${EnvironmentName}-${TaskFamily}-${ServiceName}-service
      TaskDefinition: !Ref Task
      Cluster: !ImportValue app-cluster
      LaunchType: FARGATE
      DesiredCount: 2
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 70
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !ImportValue cloudops-vpc-PrivateSubnet1AppID
            - !ImportValue cloudops-vpc-PrivateSubnet2AppID
            - !ImportValue cloudops-vpc-PrivateSubnet3AppID
          SecurityGroups:
            - !ImportValue ecs-container-sg
      LoadBalancers:
        - ContainerName: !Sub ${Stage}-${EnvironmentName}-${TaskFamily}-${ServiceName}
          ContainerPort: 8080
          TargetGroupArn: !Ref TargetGroup

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${Stage}-${EnvironmentName}-${TaskFamily}-${ServiceName}-tg
      VpcId: !ImportValue cloudops-vpc-vpcID
      Port: 80
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /actuator/health
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 10
      TargetType: ip

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !ImportValue elb-http-listener
      Priority: 2
      Conditions:
        - Field: path-pattern
          Values:
            - /api/*
            - /actuator/*
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward

Outputs:
  ApiEndpoint:
    Description: Product API Endpoint
    Value: !Join ["", ["http://", !ImportValue elb-dns-name, "/api/products"]]
    Export:
      Name: product-api-endpoint
